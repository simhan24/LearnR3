---
title: "Reproducible documents test"
author: "Simon"
format: html
---

#Intro stuff section 8
```{r}
2 + 2
```
if you write R setup, it always runs this code first. 
```{r setup}
#| message: false
#| warning: false
library(tidyverse)
library(NHANES)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```


new code chunk

```{r}
nhanes_small
```

## Table of results

```{r mean-age-bmi-table}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of age and bmi for education and diabetes status")
```


## prettier table
```{r prettier-table}
#| echo: false
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  mutate(
    mean_age =
      round(mean_age, digits = 1)
  ) %>%
  mutate(mean_bmi = round(mean_bmi, digits = 1)) %>%
  mutate(education = str_to_sentence(education)) %>%
  rename("Diabetes status" = diabetes, Education = education, "Mean age" = mean_age, "Mean BMI" = mean_bmi) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of age and bmi for education and diabetes status")
```

##Putting in an IMAGE or figure section 8

When you type out the path of the image, it needs to start from where the Cuarto file is placed. Here the cuarto file QMD is placed in the "doc" folder, so the part starts from there. If you need to back to another folder, you need to write    ..      like the return arrow in the files.
This is cumbersome, so its easier to just place the images and figures in the same path

This image is of the awesome new calorimeter in @fig-get-in-here

![New calorimeter taken by me](Images_learning_R/Calorimeter1.jpg){#fig-get-in-here width="100%" height=100%"}


#Visualising data (Section 9)

GENERAL: IF YOU NEED TO USE "WRANGLING" FX FILTERING OUT VALUES ETC; you should use dplyr package and you should use the piping theme, ie. nhanes_small %>%  filter etc %>%  ggplot

```{r histogram bmi 1}
# Create histogram for bmi
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram()
```

```{r histogram bmi 2}
# create histogram for BMI without missing values
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```


```{r histogram with selected or filtered data}
nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

BMI distribution in NHANES dataset was visualised in @fig-bmi-histo

WHEN YOU MAKE A FIGURE LABEL, ALWAYS HAVE IT START WITH    fig- 

```{r histogram with added labels and caption}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```


```{r bar plot to visualise counts}
# create count barplot for education
ggplot(nhanes_small, aes(x = education)) +
  geom_bar()
```
You cannot 

```{r bar plot to visualise, diabetes}
# create count barplot of diabetes
ggplot(nhanes_small, aes(x = diabetes)) +
  geom_bar()
```


```{r bar plot to visualise, diabetes with removing NA values}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()
```


```{r same as above, but with education}
nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

fig-subcap is subcaption for the different bar plots placed side by side. 
layout-ncol defines how many columns placed side by side, in this case 2.



```{r creating 2 bar plots next to each other with subcaptions and captions}
#| label: fig-diabetes-education
#| fig-cap: "Counts of diabetes and education in NHANES"
#| fig-subcap:
#|   - "Number of those with or without diabetes."
#|   - "Number of those with different education level."
#| layout-ncol: 2

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```


###coding chunks for continuous variables plotting 2 variables

```{r hex plot of bmi vs systolic blood pressure}
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE)
```

```{r same hex plot adding a smoothing line with conficdence interval}
# add a smoothing line by using geom_smooth in another layer using +
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```

###plotting two categorical variables

"fill =" means that you fill out the two columns of diabetes yes or no, with the distribution of education levels
```{r plotting two categorical variables with fillling the columns}
# two categorical variables
nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar()
```

```{r placing them side by side with dodge}
# "Dodged" bar plot
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge())
```
### plotting continuous and discrete variables together

Example, plotting the bmi pr diabetes status
```{r}
# using mixed data
nhanes_small %>%
  filter(!is.na(diabetes), bmi <= 60) %>%
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = TRUE)
```



## Exercise 9.5 to make plots with one or two variables

```{r loading full NHANES library}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

```{r}
#| fig-cap: "Distribution of age and age at diabetes diagnosis"
#| label: fig-nhanes-exercise
#| layout-ncol: 2
#| fig-subcap:
#|   - "Age"
#|   - "Age at diabetes diagnosis"
# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```



```{r}
# Number of people who smoke now and are or above 20 years of age,
# removing those with missing smoking status.
#| label: fig-smoking-age20+
#| fig-cap: "Number of people aged 20 years or more currently smoking"
nhanes_exercise %>%
  filter(age >= 20, !is.na(smoke_now)) %>%
  ggplot(aes(x = smoke_now)) +
  geom_bar()
```



```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```



### Plotting three or more variables

general thing. the color =  function colors out the outline of e.g. the boxplot. the fill = function fills it out.

```{r two categorical and one continuous}
# plotting systolic BP in relation to education and diabetes
# plotting the last variable as a color.
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = education, y = bp_sys_ave, color = diabetes)) +
  geom_boxplot(na.rm = TRUE)
```

```{r}
# plotting BMI in relation to systolic blood pressure and age
nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, color = age)) +
  geom_point(na.rm = TRUE)
```


```{r plotting two continuous and one categorical variable}
# plot BMI in relatino to systolic blood pressure and diabetes status
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, color = diabetes)) +
  geom_point(na.rm = TRUE)
```
THe colors overlap in this, so its difficult to see what's going on.
e will use facetting to fix this which splits of the plots 

```{r using facetting on the above graph by columns}
# plot bmi in relation to syst BP and diabetes using facetting by columns
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  # facet_grid(Columns or rows, = vars(THE VARIABLE OF INTEREST))
  facet_grid(cols = vars(diabetes))
```

```{r}
# facetting by row
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(rows = vars(diabetes))
```

Adding even more variables
```{r plotting 5 variables}
# plot bmi in relation to sys BP, diabetes status, education status and age
nhanes_small %>%
  # Use filter for categorical variables
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, color = age)) +
  geom_point(na.rm = TRUE) +
  facet_grid(
    rows = vars(diabetes),
    cols = vars(education)
  )
```

###Do exercises 9.8, 9.9, 9.10 to learn more
